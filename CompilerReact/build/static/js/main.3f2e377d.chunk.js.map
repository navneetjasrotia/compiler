{"version":3,"sources":["compoenent/compiler.js","App.js","serviceWorker.js","index.js"],"names":["compiler","props","sendData","array","setState","input","customRef","current","value","loading","a","fetch","method","headers","body","JSON","stringify","codearea","state","code","filetype","rawResponse","json","content","stderr","stdout","exe","exetime","toString","length","substring","split","output","arr","exeTime","onChange","newValue","themeChange","e","target","name","theme","fileChange","mode","React","createRef","document","style","results","this","map","prop","ind","paddingTop","paddingBottom","key","backgroundColor","color","paddingLeft","fontSize","height","marginTop","marginBottom","textAlign","boxShadow","borderRadius","borderTop","borderLeft","borderRight","width","marginLeft","className","float","border","editorProps","$blockScrolling","overflow","ref","placeholder","outline","onClick","variant","disabled","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f2e377d.chunk.js","sourcesContent":["import React , {Component} from 'react'\r\nimport AceEditor from 'react-ace';\r\nimport Button from 'muicss/lib/react/button';\r\nimport brace from 'brace'\r\nimport 'brace/mode/java';\r\nimport 'brace/mode/c_cpp'\r\nimport 'brace/mode/python'\r\nimport 'brace/theme/dracula';\r\nimport 'brace/theme/monokai'\r\nimport 'brace/theme/chrome'\r\nimport 'brace/theme/github'\r\nimport  './button.css'\r\nimport './select.css'\r\n\r\nclass compiler extends Component{\r\n constructor(props){\r\n   super(props)\r\n   this.state={\r\n     input:'',\r\n     code:'#include<stdio.h>\\nint main()\\n{\\n printf(\"hello navi\");\\n return 0;\\n}',\r\n     output:'',\r\n     arr:[],\r\n     mode:'c_cpp',\r\n     theme:'chrome',\r\n     filetype:'c',\r\n     loading:false,\r\n     exeTime:''\r\n   }\r\n   this.customRef=React.createRef()\r\n }\r\n\r\ncomponentDidMount()\r\n{\r\n  document.body.style = 'background:#F9F9F9'\r\n}\r\n\r\n sendData=()=>{\r\n    var array=[]\r\n    this.setState({\r\n    input:this.customRef.current.value,\r\n    loading:true,\r\n    },async ()=>{\r\n    const rawResponse = await fetch('http://127.0.0.1:5001', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({codearea: this.state.code,input:this.state.input,filetype:this.state.filetype})\r\n  })\r\n  const content = await rawResponse.json()\r\n  let stderr=''\r\n  let stdout=''\r\n  let exe=''\r\n  stderr=content.stderr\r\n  stdout=content.stdout\r\n  exe=content.exetime\r\n  let exetime=exe.toString()\r\n  if(exetime.length>5)\r\n  exetime = exetime.substring(0,5)\r\n  exetime+='s'\r\n  if(stderr!='')\r\n  {\r\n    array=stderr.split('\\n')\r\n    this.setState({\r\n      output:stderr,\r\n      arr:array,\r\n      loading:false,\r\n      exeTime:exetime,\r\n    })\r\n  }\r\n  else{\r\n    array=stdout.split('\\n')\r\n    this.setState({\r\n      output:stdout,\r\n      arr:array,\r\n      loading:false,\r\n      exeTime:exetime,\r\n    })\r\n   }\r\n  })\r\n}\r\n\r\nonChange=(newValue)=>{\r\n  this.setState({\r\n    code:newValue\r\n  })\r\n}\r\n\r\nthemeChange=(e)=>{\r\n  let {name,value}=e.target\r\n  this.setState({\r\n    theme:value\r\n  })\r\n}\r\n\r\nfileChange=(e)=>{\r\n  let {name,value}=e.target\r\n  this.setState({\r\n    filetype:value\r\n  },()=>{\r\n    if(this.state.filetype=='c' || this.state.filetype=='cpp')\r\n    {\r\n      if(this.state.filetype=='cpp')\r\n      {\r\n      this.setState({\r\n        mode:'c_cpp',\r\n        code:'#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n cout<<\"hello navi !\";\\n return 0;\\n}'\r\n      })\r\n      }\r\n      else\r\n      {\r\n        this.setState({\r\n          mode:'c_cpp',\r\n          code:'#include<stdio.h>\\nint main()\\n{\\n printf(\"hello navi\");\\n return 0;\\n}',\r\n        })\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if(this.state.filetype=='java')\r\n      {\r\n      this.setState({\r\n        mode:this.state.filetype,\r\n        code:'import java.io.*;\\nclass Main\\n{\\n  public static void main(String[] args)\\n  {\\n   System.out.println(\"hello navi !\");\\n  }\\n}'\r\n      })\r\n      }\r\n      else\r\n      {\r\n        this.setState({\r\n          mode:this.state.filetype,\r\n          code:'print(\"hello navi !\")'\r\n        })\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\n  render(){\r\n  const results = this.state.arr.map((prop,ind)=><div style={{paddingTop:\"8px\", paddingBottom:'20px'}}\r\n  key={ind} style={{backgroundColor:'black',color:'white',paddingLeft:'10px',fontSize:'1.1em'}}>{this.state.arr[ind]}\r\n  </div>)\r\n\r\n  const options = {\r\n        selectOnLineNumbers: true\r\n      }\r\n\r\n    return(\r\n      <div>\r\n      <div style={{height:'100%',marginTop:'10px',marginBottom:'50px',textAlign:'center'}}>\r\n      <h2>Online IDE For C Cpp Java and Python</h2>\r\n      </div>\r\n      <div style={{backgroundColor:'white',boxShadow:'0px 4px 8px #ccc',borderRadius:'6px',borderTop:'1px solid grey',borderLeft:'1px solid grey',borderRight:'1px solid grey',height:'60px',width:'890px', marginLeft:'250px'}}>\r\n      <select className=\"select-css\" onChange={this.themeChange} style={{marginTop:'10px',float:'left',width:'150px',marginLeft:'10px'}}>\r\n      <option value=\"chrome\">Chrome</option>\r\n      <option value=\"dracula\">Dracula</option>\r\n      <option value=\"monokai\">Monokai</option>\r\n      <option value=\"github\">Github</option>\r\n      </select>\r\n      <select className=\"select-css\" onChange={this.fileChange} style={{float:'left',marginTop:'10px',width:'150px',marginLeft:'575px'}}>\r\n      <option value=\"c\">C</option>\r\n      <option value=\"cpp\">C++</option>\r\n      <option value=\"java\">Java</option>\r\n      <option value=\"python\">Python</option>\r\n      </select>\r\n       </div>\r\n      <div style={{marginLeft:'250px',}}>\r\n      <div style={{width:'890px', border:'1px solid grey'}}>\r\n      <AceEditor\r\n        width=\"890px\"\r\n        height=\"550px\"\r\n        fontSize=\"1.2em\"\r\n        value={this.state.code}\r\n         mode={this.state.mode}\r\n         theme={this.state.theme}\r\n         name=\"UNIQUE_ID_OF_DIV\"\r\n         onChange={this.onChange}\r\n        editorProps={{\r\n            $blockScrolling: true\r\n        }}\r\n      />\r\n      </div>\r\n      <div style={{overflow:'hidden',width:\"600px\", height:'300px'}}>\r\n      <textarea className=\"inputarea\" ref={this.customRef} placeholder=\"Type Input Here !\" style={{outline:'0px',marginTop:'10px',paddingLeft:'8px',paddingTop:'9px',width:'550px', height:'200px', fontSize:'1.2em',color:'black'}}></textarea>\r\n      <button style={{marginTop:'5px'}}className=\"button\" onClick={this.sendData}\r\n      variant=\"primary\"\r\n      disabled={this.state.loading}>{this.state.loading ? 'Compiling…' : 'Compile & Run'}</button>\r\n      </div>\r\n      <h3 style={{marginTop:'40px'}}>Execution Time:- {this.state.exeTime}</h3>\r\n      <div style={{backgroundColor:'black',color:'white',borderRadius:'6px', width:'900px', height:'200px', marginTop:'2px', marginBottom:'20px',overflow:'auto'}}>\r\n      {results}\r\n      </div>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default compiler\r\n","import React, { Component } from 'react'\nimport Compiler from './compoenent/compiler.js'\nfunction App()\n{\n  return (\n  <Compiler />\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}